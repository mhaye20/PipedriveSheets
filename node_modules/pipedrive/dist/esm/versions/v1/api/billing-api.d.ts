/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetSubscriptionAddonsResponse } from '../models';
/**
 * BillingApi - axios parameter creator
 * @export
 */
export declare const BillingApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns the add-ons for a single company.
     * @summary Get all add-ons for a single company

     * @throws {RequiredError}
     */
    getCompanyAddons: () => Promise<RequestArgs>;
};
/**
 * BillingApi - functional programming interface
 * @export
 */
export declare const BillingApiFp: (configuration?: Configuration) => {
    /**
     * Returns the add-ons for a single company.
     * @summary Get all add-ons for a single company

     * @throws {RequiredError}
     */
    getCompanyAddons(): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetSubscriptionAddonsResponse>>;
};
/**
 * BillingApi - factory interface
 * @export
 */
export declare const BillingApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns the add-ons for a single company.
     * @summary Get all add-ons for a single company

     * @throws {RequiredError}
     */
    getCompanyAddons(): Promise<GetSubscriptionAddonsResponse>;
};
/**
 * BillingApi - object-oriented interface
 * @export
 * @class BillingApi
 * @extends {BaseAPI}
 */
export declare class BillingApi extends BaseAPI {
    /**
     * Returns the add-ons for a single company.
     * @summary Get all add-ons for a single company

     * @throws {RequiredError}
     * @memberof BillingApi
     */
    getCompanyAddons(): Promise<GetSubscriptionAddonsResponse>;
}
