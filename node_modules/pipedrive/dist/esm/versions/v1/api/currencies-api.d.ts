/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetCurrenciesResponse } from '../models';
/**
 * CurrenciesApi - axios parameter creator
 * @export
 */
export declare const CurrenciesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
     * @summary Get all supported currencies
     * @param {string} [term] Optional search term that is searched for from currency\&#39;s name and/or code

     * @throws {RequiredError}
     */
    getCurrencies: (term?: string) => Promise<RequestArgs>;
};
/**
 * CurrenciesApi - functional programming interface
 * @export
 */
export declare const CurrenciesApiFp: (configuration?: Configuration) => {
    /**
     * Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
     * @summary Get all supported currencies
     * @param {string} [term] Optional search term that is searched for from currency\&#39;s name and/or code

     * @throws {RequiredError}
     */
    getCurrencies(term?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetCurrenciesResponse>>;
};
/**
 * CurrenciesApi - factory interface
 * @export
 */
export declare const CurrenciesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
     * @summary Get all supported currencies
     * @param {CurrenciesApiGetCurrenciesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getCurrencies(requestParameters?: CurrenciesApiGetCurrenciesRequest): Promise<GetCurrenciesResponse>;
};
/**
 * Request parameters for getCurrencies operation in CurrenciesApi.
 * @export
 * @interface CurrenciesApiGetCurrenciesRequest
 */
export interface CurrenciesApiGetCurrenciesRequest {
    /**
     * Optional search term that is searched for from currency\&#39;s name and/or code
     * @type {string}
     * @memberof CurrenciesApiGetCurrencies
     */
    readonly term?: string;
}
/**
 * CurrenciesApi - object-oriented interface
 * @export
 * @class CurrenciesApi
 * @extends {BaseAPI}
 */
export declare class CurrenciesApi extends BaseAPI {
    /**
     * Returns all supported currencies in given account which should be used when saving monetary values with other objects. The `code` parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.
     * @summary Get all supported currencies
     * @param {CurrenciesApiGetCurrenciesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof CurrenciesApi
     */
    getCurrencies(requestParameters?: CurrenciesApiGetCurrenciesRequest): Promise<GetCurrenciesResponse>;
}
