/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetProjectBoardResponse } from '../models';
import { GetProjectPhaseResponse } from '../models';
import { GetProjectTemplateResponse } from '../models';
import { GetProjectTemplatesResponse } from '../models';
/**
 * ProjectTemplatesApi - axios parameter creator
 * @export
 */
export declare const ProjectTemplatesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns the details of a specific project template.
     * @summary Get details of a template
     * @param {number} id The ID of the project template

     * @throws {RequiredError}
     */
    getProjectTemplate: (id: number) => Promise<RequestArgs>;
    /**
     * Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     * @summary Get all project templates
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned.

     * @throws {RequiredError}
     */
    getProjectTemplates: (cursor?: string, limit?: number) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific project board.
     * @summary Get details of a board
     * @param {number} id The ID of the project board

     * @throws {RequiredError}
     */
    getProjectsBoard: (id: number) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific project phase.
     * @summary Get details of a phase
     * @param {number} id The ID of the project phase

     * @throws {RequiredError}
     */
    getProjectsPhase: (id: number) => Promise<RequestArgs>;
};
/**
 * ProjectTemplatesApi - functional programming interface
 * @export
 */
export declare const ProjectTemplatesApiFp: (configuration?: Configuration) => {
    /**
     * Returns the details of a specific project template.
     * @summary Get details of a template
     * @param {number} id The ID of the project template

     * @throws {RequiredError}
     */
    getProjectTemplate(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetProjectTemplateResponse>>;
    /**
     * Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     * @summary Get all project templates
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned.

     * @throws {RequiredError}
     */
    getProjectTemplates(cursor?: string, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetProjectTemplatesResponse>>;
    /**
     * Returns the details of a specific project board.
     * @summary Get details of a board
     * @param {number} id The ID of the project board

     * @throws {RequiredError}
     */
    getProjectsBoard(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetProjectBoardResponse>>;
    /**
     * Returns the details of a specific project phase.
     * @summary Get details of a phase
     * @param {number} id The ID of the project phase

     * @throws {RequiredError}
     */
    getProjectsPhase(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetProjectPhaseResponse>>;
};
/**
 * ProjectTemplatesApi - factory interface
 * @export
 */
export declare const ProjectTemplatesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns the details of a specific project template.
     * @summary Get details of a template
     * @param {ProjectTemplatesApiGetProjectTemplateRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getProjectTemplate(requestParameters: ProjectTemplatesApiGetProjectTemplateRequest): Promise<GetProjectTemplateResponse>;
    /**
     * Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     * @summary Get all project templates
     * @param {ProjectTemplatesApiGetProjectTemplatesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getProjectTemplates(requestParameters?: ProjectTemplatesApiGetProjectTemplatesRequest): Promise<GetProjectTemplatesResponse>;
    /**
     * Returns the details of a specific project board.
     * @summary Get details of a board
     * @param {ProjectTemplatesApiGetProjectsBoardRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getProjectsBoard(requestParameters: ProjectTemplatesApiGetProjectsBoardRequest): Promise<GetProjectBoardResponse>;
    /**
     * Returns the details of a specific project phase.
     * @summary Get details of a phase
     * @param {ProjectTemplatesApiGetProjectsPhaseRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getProjectsPhase(requestParameters: ProjectTemplatesApiGetProjectsPhaseRequest): Promise<GetProjectPhaseResponse>;
};
/**
 * Request parameters for getProjectTemplate operation in ProjectTemplatesApi.
 * @export
 * @interface ProjectTemplatesApiGetProjectTemplateRequest
 */
export interface ProjectTemplatesApiGetProjectTemplateRequest {
    /**
     * The ID of the project template
     * @type {number}
     * @memberof ProjectTemplatesApiGetProjectTemplate
     */
    readonly id: number;
}
/**
 * Request parameters for getProjectTemplates operation in ProjectTemplatesApi.
 * @export
 * @interface ProjectTemplatesApiGetProjectTemplatesRequest
 */
export interface ProjectTemplatesApiGetProjectTemplatesRequest {
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof ProjectTemplatesApiGetProjectTemplates
     */
    readonly cursor?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, up to 500 items will be returned.
     * @type {number}
     * @memberof ProjectTemplatesApiGetProjectTemplates
     */
    readonly limit?: number;
}
/**
 * Request parameters for getProjectsBoard operation in ProjectTemplatesApi.
 * @export
 * @interface ProjectTemplatesApiGetProjectsBoardRequest
 */
export interface ProjectTemplatesApiGetProjectsBoardRequest {
    /**
     * The ID of the project board
     * @type {number}
     * @memberof ProjectTemplatesApiGetProjectsBoard
     */
    readonly id: number;
}
/**
 * Request parameters for getProjectsPhase operation in ProjectTemplatesApi.
 * @export
 * @interface ProjectTemplatesApiGetProjectsPhaseRequest
 */
export interface ProjectTemplatesApiGetProjectsPhaseRequest {
    /**
     * The ID of the project phase
     * @type {number}
     * @memberof ProjectTemplatesApiGetProjectsPhase
     */
    readonly id: number;
}
/**
 * ProjectTemplatesApi - object-oriented interface
 * @export
 * @class ProjectTemplatesApi
 * @extends {BaseAPI}
 */
export declare class ProjectTemplatesApi extends BaseAPI {
    /**
     * Returns the details of a specific project template.
     * @summary Get details of a template
     * @param {ProjectTemplatesApiGetProjectTemplateRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof ProjectTemplatesApi
     */
    getProjectTemplate(requestParameters: ProjectTemplatesApiGetProjectTemplateRequest): Promise<GetProjectTemplateResponse>;
    /**
     * Returns all not deleted project templates. This is a cursor-paginated endpoint. For more information, please refer to our documentation on <a href=\"https://pipedrive.readme.io/docs/core-api-concepts-pagination\" target=\"_blank\" rel=\"noopener noreferrer\">pagination</a>.
     * @summary Get all project templates
     * @param {ProjectTemplatesApiGetProjectTemplatesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof ProjectTemplatesApi
     */
    getProjectTemplates(requestParameters?: ProjectTemplatesApiGetProjectTemplatesRequest): Promise<GetProjectTemplatesResponse>;
    /**
     * Returns the details of a specific project board.
     * @summary Get details of a board
     * @param {ProjectTemplatesApiGetProjectsBoardRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof ProjectTemplatesApi
     */
    getProjectsBoard(requestParameters: ProjectTemplatesApiGetProjectsBoardRequest): Promise<GetProjectBoardResponse>;
    /**
     * Returns the details of a specific project phase.
     * @summary Get details of a phase
     * @param {ProjectTemplatesApiGetProjectsPhaseRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof ProjectTemplatesApi
     */
    getProjectsPhase(requestParameters: ProjectTemplatesApiGetProjectsPhaseRequest): Promise<GetProjectPhaseResponse>;
}
