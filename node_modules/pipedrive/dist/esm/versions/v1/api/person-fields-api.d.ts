/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CreateFieldRequest } from '../models';
import { DeleteFieldsResponse } from '../models';
import { DeleteResponse } from '../models';
import { GetFieldResponse } from '../models';
import { GetFieldsResponse } from '../models';
import { UpdateFieldRequest } from '../models';
/**
 * PersonFieldsApi - axios parameter creator
 * @export
 */
export declare const PersonFieldsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new person field
     * @param {CreateFieldRequest} [CreateFieldRequest]

     * @throws {RequiredError}
     */
    addPersonField: (CreateFieldRequest?: CreateFieldRequest) => Promise<RequestArgs>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a person field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    deletePersonField: (id: number) => Promise<RequestArgs>;
    /**
     * Marks multiple fields as deleted.
     * @summary Delete multiple person fields in bulk
     * @param {string} ids The comma-separated field IDs to delete

     * @throws {RequiredError}
     */
    deletePersonFields: (ids: string) => Promise<RequestArgs>;
    /**
     * Returns data about a specific person field.
     * @summary Get one person field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    getPersonField: (id: number) => Promise<RequestArgs>;
    /**
     * Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
     * @summary Get all person fields
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getPersonFields: (start?: number, limit?: number) => Promise<RequestArgs>;
    /**
     * Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a person field
     * @param {number} id The ID of the field
     * @param {UpdateFieldRequest} [UpdateFieldRequest]

     * @throws {RequiredError}
     */
    updatePersonField: (id: number, UpdateFieldRequest?: UpdateFieldRequest) => Promise<RequestArgs>;
};
/**
 * PersonFieldsApi - functional programming interface
 * @export
 */
export declare const PersonFieldsApiFp: (configuration?: Configuration) => {
    /**
     * Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new person field
     * @param {CreateFieldRequest} [CreateFieldRequest]

     * @throws {RequiredError}
     */
    addPersonField(CreateFieldRequest?: CreateFieldRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a person field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    deletePersonField(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteResponse>>;
    /**
     * Marks multiple fields as deleted.
     * @summary Delete multiple person fields in bulk
     * @param {string} ids The comma-separated field IDs to delete

     * @throws {RequiredError}
     */
    deletePersonFields(ids: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteFieldsResponse>>;
    /**
     * Returns data about a specific person field.
     * @summary Get one person field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    getPersonField(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
    /**
     * Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
     * @summary Get all person fields
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getPersonFields(start?: number, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldsResponse>>;
    /**
     * Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a person field
     * @param {number} id The ID of the field
     * @param {UpdateFieldRequest} [UpdateFieldRequest]

     * @throws {RequiredError}
     */
    updatePersonField(id: number, UpdateFieldRequest?: UpdateFieldRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
};
/**
 * PersonFieldsApi - factory interface
 * @export
 */
export declare const PersonFieldsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new person field
     * @param {PersonFieldsApiAddPersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addPersonField(requestParameters?: PersonFieldsApiAddPersonFieldRequest): Promise<GetFieldResponse>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a person field
     * @param {PersonFieldsApiDeletePersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deletePersonField(requestParameters: PersonFieldsApiDeletePersonFieldRequest): Promise<DeleteResponse>;
    /**
     * Marks multiple fields as deleted.
     * @summary Delete multiple person fields in bulk
     * @param {PersonFieldsApiDeletePersonFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deletePersonFields(requestParameters: PersonFieldsApiDeletePersonFieldsRequest): Promise<DeleteFieldsResponse>;
    /**
     * Returns data about a specific person field.
     * @summary Get one person field
     * @param {PersonFieldsApiGetPersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPersonField(requestParameters: PersonFieldsApiGetPersonFieldRequest): Promise<GetFieldResponse>;
    /**
     * Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
     * @summary Get all person fields
     * @param {PersonFieldsApiGetPersonFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPersonFields(requestParameters?: PersonFieldsApiGetPersonFieldsRequest): Promise<GetFieldsResponse>;
    /**
     * Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a person field
     * @param {PersonFieldsApiUpdatePersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updatePersonField(requestParameters: PersonFieldsApiUpdatePersonFieldRequest): Promise<GetFieldResponse>;
};
/**
 * Request parameters for addPersonField operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiAddPersonFieldRequest
 */
export interface PersonFieldsApiAddPersonFieldRequest {
    /**
     *
     * @type {CreateFieldRequest}
     * @memberof PersonFieldsApiAddPersonField
     */
    readonly CreateFieldRequest?: CreateFieldRequest;
}
/**
 * Request parameters for deletePersonField operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiDeletePersonFieldRequest
 */
export interface PersonFieldsApiDeletePersonFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof PersonFieldsApiDeletePersonField
     */
    readonly id: number;
}
/**
 * Request parameters for deletePersonFields operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiDeletePersonFieldsRequest
 */
export interface PersonFieldsApiDeletePersonFieldsRequest {
    /**
     * The comma-separated field IDs to delete
     * @type {string}
     * @memberof PersonFieldsApiDeletePersonFields
     */
    readonly ids: string;
}
/**
 * Request parameters for getPersonField operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiGetPersonFieldRequest
 */
export interface PersonFieldsApiGetPersonFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof PersonFieldsApiGetPersonField
     */
    readonly id: number;
}
/**
 * Request parameters for getPersonFields operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiGetPersonFieldsRequest
 */
export interface PersonFieldsApiGetPersonFieldsRequest {
    /**
     * Pagination start
     * @type {number}
     * @memberof PersonFieldsApiGetPersonFields
     */
    readonly start?: number;
    /**
     * Items shown per page
     * @type {number}
     * @memberof PersonFieldsApiGetPersonFields
     */
    readonly limit?: number;
}
/**
 * Request parameters for updatePersonField operation in PersonFieldsApi.
 * @export
 * @interface PersonFieldsApiUpdatePersonFieldRequest
 */
export interface PersonFieldsApiUpdatePersonFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof PersonFieldsApiUpdatePersonField
     */
    readonly id: number;
    /**
     *
     * @type {UpdateFieldRequest}
     * @memberof PersonFieldsApiUpdatePersonField
     */
    readonly UpdateFieldRequest?: UpdateFieldRequest;
}
/**
 * PersonFieldsApi - object-oriented interface
 * @export
 * @class PersonFieldsApi
 * @extends {BaseAPI}
 */
export declare class PersonFieldsApi extends BaseAPI {
    /**
     * Adds a new person field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new person field
     * @param {PersonFieldsApiAddPersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    addPersonField(requestParameters?: PersonFieldsApiAddPersonFieldRequest): Promise<GetFieldResponse>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a person field
     * @param {PersonFieldsApiDeletePersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    deletePersonField(requestParameters: PersonFieldsApiDeletePersonFieldRequest): Promise<DeleteResponse>;
    /**
     * Marks multiple fields as deleted.
     * @summary Delete multiple person fields in bulk
     * @param {PersonFieldsApiDeletePersonFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    deletePersonFields(requestParameters: PersonFieldsApiDeletePersonFieldsRequest): Promise<DeleteFieldsResponse>;
    /**
     * Returns data about a specific person field.
     * @summary Get one person field
     * @param {PersonFieldsApiGetPersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    getPersonField(requestParameters: PersonFieldsApiGetPersonFieldRequest): Promise<GetFieldResponse>;
    /**
     * Returns data about all person fields.<br>If a company uses the [Campaigns product](https://pipedrive.readme.io/docs/campaigns-in-pipedrive-api), then this endpoint will also return the `data.marketing_status` field.
     * @summary Get all person fields
     * @param {PersonFieldsApiGetPersonFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    getPersonFields(requestParameters?: PersonFieldsApiGetPersonFieldsRequest): Promise<GetFieldsResponse>;
    /**
     * Updates a person field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a person field
     * @param {PersonFieldsApiUpdatePersonFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PersonFieldsApi
     */
    updatePersonField(requestParameters: PersonFieldsApiUpdatePersonFieldRequest): Promise<GetFieldResponse>;
}
