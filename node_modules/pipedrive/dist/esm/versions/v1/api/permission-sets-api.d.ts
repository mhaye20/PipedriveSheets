/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { GetPermissionSetResponse } from '../models';
import { GetPermissionSetsResponse } from '../models';
import { GetUserAssignmentsToPermissionSetResponse } from '../models';
/**
 * PermissionSetsApi - axios parameter creator
 * @export
 */
export declare const PermissionSetsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns data about a specific permission set.
     * @summary Get one permission set
     * @param {string} id The ID of the permission set

     * @throws {RequiredError}
     */
    getPermissionSet: (id: string) => Promise<RequestArgs>;
    /**
     * Returns the list of assignments for a permission set.
     * @summary List permission set assignments
     * @param {string} id The ID of the permission set
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getPermissionSetAssignments: (id: string, start?: number, limit?: number) => Promise<RequestArgs>;
    /**
     * Returns data about all permission sets.
     * @summary Get all permission sets
     * @param {'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings'} [app] The app to filter the permission sets by

     * @throws {RequiredError}
     */
    getPermissionSets: (app?: 'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings') => Promise<RequestArgs>;
};
/**
 * PermissionSetsApi - functional programming interface
 * @export
 */
export declare const PermissionSetsApiFp: (configuration?: Configuration) => {
    /**
     * Returns data about a specific permission set.
     * @summary Get one permission set
     * @param {string} id The ID of the permission set

     * @throws {RequiredError}
     */
    getPermissionSet(id: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetPermissionSetResponse>>;
    /**
     * Returns the list of assignments for a permission set.
     * @summary List permission set assignments
     * @param {string} id The ID of the permission set
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getPermissionSetAssignments(id: string, start?: number, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetUserAssignmentsToPermissionSetResponse>>;
    /**
     * Returns data about all permission sets.
     * @summary Get all permission sets
     * @param {'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings'} [app] The app to filter the permission sets by

     * @throws {RequiredError}
     */
    getPermissionSets(app?: 'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetPermissionSetsResponse>>;
};
/**
 * PermissionSetsApi - factory interface
 * @export
 */
export declare const PermissionSetsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns data about a specific permission set.
     * @summary Get one permission set
     * @param {PermissionSetsApiGetPermissionSetRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPermissionSet(requestParameters: PermissionSetsApiGetPermissionSetRequest): Promise<GetPermissionSetResponse>;
    /**
     * Returns the list of assignments for a permission set.
     * @summary List permission set assignments
     * @param {PermissionSetsApiGetPermissionSetAssignmentsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPermissionSetAssignments(requestParameters: PermissionSetsApiGetPermissionSetAssignmentsRequest): Promise<GetUserAssignmentsToPermissionSetResponse>;
    /**
     * Returns data about all permission sets.
     * @summary Get all permission sets
     * @param {PermissionSetsApiGetPermissionSetsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getPermissionSets(requestParameters?: PermissionSetsApiGetPermissionSetsRequest): Promise<GetPermissionSetsResponse>;
};
/**
 * Request parameters for getPermissionSet operation in PermissionSetsApi.
 * @export
 * @interface PermissionSetsApiGetPermissionSetRequest
 */
export interface PermissionSetsApiGetPermissionSetRequest {
    /**
     * The ID of the permission set
     * @type {string}
     * @memberof PermissionSetsApiGetPermissionSet
     */
    readonly id: string;
}
/**
 * Request parameters for getPermissionSetAssignments operation in PermissionSetsApi.
 * @export
 * @interface PermissionSetsApiGetPermissionSetAssignmentsRequest
 */
export interface PermissionSetsApiGetPermissionSetAssignmentsRequest {
    /**
     * The ID of the permission set
     * @type {string}
     * @memberof PermissionSetsApiGetPermissionSetAssignments
     */
    readonly id: string;
    /**
     * Pagination start
     * @type {number}
     * @memberof PermissionSetsApiGetPermissionSetAssignments
     */
    readonly start?: number;
    /**
     * Items shown per page
     * @type {number}
     * @memberof PermissionSetsApiGetPermissionSetAssignments
     */
    readonly limit?: number;
}
/**
 * Request parameters for getPermissionSets operation in PermissionSetsApi.
 * @export
 * @interface PermissionSetsApiGetPermissionSetsRequest
 */
export interface PermissionSetsApiGetPermissionSetsRequest {
    /**
     * The app to filter the permission sets by
     * @type {'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings'}
     * @memberof PermissionSetsApiGetPermissionSets
     */
    readonly app?: 'sales' | 'projects' | 'campaigns' | 'global' | 'account_settings';
}
/**
 * PermissionSetsApi - object-oriented interface
 * @export
 * @class PermissionSetsApi
 * @extends {BaseAPI}
 */
export declare class PermissionSetsApi extends BaseAPI {
    /**
     * Returns data about a specific permission set.
     * @summary Get one permission set
     * @param {PermissionSetsApiGetPermissionSetRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PermissionSetsApi
     */
    getPermissionSet(requestParameters: PermissionSetsApiGetPermissionSetRequest): Promise<GetPermissionSetResponse>;
    /**
     * Returns the list of assignments for a permission set.
     * @summary List permission set assignments
     * @param {PermissionSetsApiGetPermissionSetAssignmentsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PermissionSetsApi
     */
    getPermissionSetAssignments(requestParameters: PermissionSetsApiGetPermissionSetAssignmentsRequest): Promise<GetUserAssignmentsToPermissionSetResponse>;
    /**
     * Returns data about all permission sets.
     * @summary Get all permission sets
     * @param {PermissionSetsApiGetPermissionSetsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof PermissionSetsApi
     */
    getPermissionSets(requestParameters?: PermissionSetsApiGetPermissionSetsRequest): Promise<GetPermissionSetsResponse>;
}
