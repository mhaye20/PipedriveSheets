/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AddLeadRequest } from '../models';
import { GetLeadIdResponse } from '../models';
import { GetLeadResponse } from '../models';
import { GetLeadSearchResponse } from '../models';
import { GetLeadsResponse } from '../models';
import { UpdateLeadRequest } from '../models';
import { UserIds } from '../models';
/**
 * LeadsApi - axios parameter creator
 * @export
 */
export declare const LeadsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source and origin set to `API`. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * @summary Add a lead
     * @param {AddLeadRequest} [AddLeadRequest]

     * @throws {RequiredError}
     */
    addLead: (AddLeadRequest?: AddLeadRequest) => Promise<RequestArgs>;
    /**
     * Deletes a specific lead.
     * @summary Delete a lead
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    deleteLead: (id: string) => Promise<RequestArgs>;
    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * @summary Get one lead
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    getLead: (id: string) => Promise<RequestArgs>;
    /**
     * Lists the users permitted to access a lead.
     * @summary List permitted users
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    getLeadUsers: (id: string) => Promise<RequestArgs>;
    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals.
     * @summary Get all leads
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
     * @param {number} [start] For pagination, the position that represents the first result for the page
     * @param {'archived' | 'not_archived' | 'all'} [archived_status] Filtering based on the archived status of a lead. If not provided, &#x60;All&#x60; is used.
     * @param {number} [owner_id] If supplied, only leads matching the given user will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;owner_id&#x60; when supplied.
     * @param {number} [person_id] If supplied, only leads matching the given person will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;person_id&#x60; when supplied.
     * @param {number} [organization_id] If supplied, only leads matching the given organization will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;organization_id&#x60; when supplied.
     * @param {number} [filter_id] The ID of the filter to use
     * @param {'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time'} [sort] The field names and sorting mode separated by a comma (&#x60;field_name_1 ASC&#x60;, &#x60;field_name_2 DESC&#x60;). Only first-level field keys are supported (no nested keys).

     * @throws {RequiredError}
     */
    getLeads: (limit?: number, start?: number, archived_status?: 'archived' | 'not_archived' | 'all', owner_id?: number, person_id?: number, organization_id?: number, filter_id?: number, sort?: 'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time') => Promise<RequestArgs>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @param {number} [organization_id] Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @param {'lead.was_seen'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [start] Pagination start. Note that the pagination is based on main results and does not include related items when using &#x60;search_for_related_items&#x60; parameter.
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    searchLeads: (term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, include_fields?: 'lead.was_seen', start?: number, limit?: number) => Promise<RequestArgs>;
    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * @summary Update a lead
     * @param {string} id The ID of the lead
     * @param {UpdateLeadRequest} [UpdateLeadRequest]

     * @throws {RequiredError}
     */
    updateLead: (id: string, UpdateLeadRequest?: UpdateLeadRequest) => Promise<RequestArgs>;
};
/**
 * LeadsApi - functional programming interface
 * @export
 */
export declare const LeadsApiFp: (configuration?: Configuration) => {
    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source and origin set to `API`. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * @summary Add a lead
     * @param {AddLeadRequest} [AddLeadRequest]

     * @throws {RequiredError}
     */
    addLead(AddLeadRequest?: AddLeadRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadResponse>>;
    /**
     * Deletes a specific lead.
     * @summary Delete a lead
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    deleteLead(id: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadIdResponse>>;
    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * @summary Get one lead
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    getLead(id: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadResponse>>;
    /**
     * Lists the users permitted to access a lead.
     * @summary List permitted users
     * @param {string} id The ID of the lead

     * @throws {RequiredError}
     */
    getLeadUsers(id: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UserIds>>;
    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals.
     * @summary Get all leads
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
     * @param {number} [start] For pagination, the position that represents the first result for the page
     * @param {'archived' | 'not_archived' | 'all'} [archived_status] Filtering based on the archived status of a lead. If not provided, &#x60;All&#x60; is used.
     * @param {number} [owner_id] If supplied, only leads matching the given user will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;owner_id&#x60; when supplied.
     * @param {number} [person_id] If supplied, only leads matching the given person will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;person_id&#x60; when supplied.
     * @param {number} [organization_id] If supplied, only leads matching the given organization will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;organization_id&#x60; when supplied.
     * @param {number} [filter_id] The ID of the filter to use
     * @param {'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time'} [sort] The field names and sorting mode separated by a comma (&#x60;field_name_1 ASC&#x60;, &#x60;field_name_2 DESC&#x60;). Only first-level field keys are supported (no nested keys).

     * @throws {RequiredError}
     */
    getLeads(limit?: number, start?: number, archived_status?: 'archived' | 'not_archived' | 'all', owner_id?: number, person_id?: number, organization_id?: number, filter_id?: number, sort?: 'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadsResponse>>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [person_id] Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @param {number} [organization_id] Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @param {'lead.was_seen'} [include_fields] Supports including optional fields in the results which are not provided by default
     * @param {number} [start] Pagination start. Note that the pagination is based on main results and does not include related items when using &#x60;search_for_related_items&#x60; parameter.
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    searchLeads(term: string, fields?: 'custom_fields' | 'notes' | 'title', exact_match?: boolean, person_id?: number, organization_id?: number, include_fields?: 'lead.was_seen', start?: number, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadSearchResponse>>;
    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * @summary Update a lead
     * @param {string} id The ID of the lead
     * @param {UpdateLeadRequest} [UpdateLeadRequest]

     * @throws {RequiredError}
     */
    updateLead(id: string, UpdateLeadRequest?: UpdateLeadRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetLeadResponse>>;
};
/**
 * LeadsApi - factory interface
 * @export
 */
export declare const LeadsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source and origin set to `API`. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * @summary Add a lead
     * @param {LeadsApiAddLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addLead(requestParameters?: LeadsApiAddLeadRequest): Promise<GetLeadResponse>;
    /**
     * Deletes a specific lead.
     * @summary Delete a lead
     * @param {LeadsApiDeleteLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteLead(requestParameters: LeadsApiDeleteLeadRequest): Promise<GetLeadIdResponse>;
    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * @summary Get one lead
     * @param {LeadsApiGetLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getLead(requestParameters: LeadsApiGetLeadRequest): Promise<GetLeadResponse>;
    /**
     * Lists the users permitted to access a lead.
     * @summary List permitted users
     * @param {LeadsApiGetLeadUsersRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getLeadUsers(requestParameters: LeadsApiGetLeadUsersRequest): Promise<UserIds>;
    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals.
     * @summary Get all leads
     * @param {LeadsApiGetLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getLeads(requestParameters?: LeadsApiGetLeadsRequest): Promise<GetLeadsResponse>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {LeadsApiSearchLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchLeads(requestParameters: LeadsApiSearchLeadsRequest): Promise<GetLeadSearchResponse>;
    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * @summary Update a lead
     * @param {LeadsApiUpdateLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateLead(requestParameters: LeadsApiUpdateLeadRequest): Promise<GetLeadResponse>;
};
/**
 * Request parameters for addLead operation in LeadsApi.
 * @export
 * @interface LeadsApiAddLeadRequest
 */
export interface LeadsApiAddLeadRequest {
    /**
     *
     * @type {AddLeadRequest}
     * @memberof LeadsApiAddLead
     */
    readonly AddLeadRequest?: AddLeadRequest;
}
/**
 * Request parameters for deleteLead operation in LeadsApi.
 * @export
 * @interface LeadsApiDeleteLeadRequest
 */
export interface LeadsApiDeleteLeadRequest {
    /**
     * The ID of the lead
     * @type {string}
     * @memberof LeadsApiDeleteLead
     */
    readonly id: string;
}
/**
 * Request parameters for getLead operation in LeadsApi.
 * @export
 * @interface LeadsApiGetLeadRequest
 */
export interface LeadsApiGetLeadRequest {
    /**
     * The ID of the lead
     * @type {string}
     * @memberof LeadsApiGetLead
     */
    readonly id: string;
}
/**
 * Request parameters for getLeadUsers operation in LeadsApi.
 * @export
 * @interface LeadsApiGetLeadUsersRequest
 */
export interface LeadsApiGetLeadUsersRequest {
    /**
     * The ID of the lead
     * @type {string}
     * @memberof LeadsApiGetLeadUsers
     */
    readonly id: string;
}
/**
 * Request parameters for getLeads operation in LeadsApi.
 * @export
 * @interface LeadsApiGetLeadsRequest
 */
export interface LeadsApiGetLeadsRequest {
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly limit?: number;
    /**
     * For pagination, the position that represents the first result for the page
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly start?: number;
    /**
     * Filtering based on the archived status of a lead. If not provided, &#x60;All&#x60; is used.
     * @type {'archived' | 'not_archived' | 'all'}
     * @memberof LeadsApiGetLeads
     */
    readonly archived_status?: 'archived' | 'not_archived' | 'all';
    /**
     * If supplied, only leads matching the given user will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;owner_id&#x60; when supplied.
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly owner_id?: number;
    /**
     * If supplied, only leads matching the given person will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;person_id&#x60; when supplied.
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly person_id?: number;
    /**
     * If supplied, only leads matching the given organization will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;organization_id&#x60; when supplied.
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly organization_id?: number;
    /**
     * The ID of the filter to use
     * @type {number}
     * @memberof LeadsApiGetLeads
     */
    readonly filter_id?: number;
    /**
     * The field names and sorting mode separated by a comma (&#x60;field_name_1 ASC&#x60;, &#x60;field_name_2 DESC&#x60;). Only first-level field keys are supported (no nested keys).
     * @type {'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time'}
     * @memberof LeadsApiGetLeads
     */
    readonly sort?: 'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time';
}
/**
 * Request parameters for searchLeads operation in LeadsApi.
 * @export
 * @interface LeadsApiSearchLeadsRequest
 */
export interface LeadsApiSearchLeadsRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof LeadsApiSearchLeads
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @type {'custom_fields' | 'notes' | 'title'}
     * @memberof LeadsApiSearchLeads
     */
    readonly fields?: 'custom_fields' | 'notes' | 'title';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof LeadsApiSearchLeads
     */
    readonly exact_match?: boolean;
    /**
     * Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @type {number}
     * @memberof LeadsApiSearchLeads
     */
    readonly person_id?: number;
    /**
     * Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @type {number}
     * @memberof LeadsApiSearchLeads
     */
    readonly organization_id?: number;
    /**
     * Supports including optional fields in the results which are not provided by default
     * @type {'lead.was_seen'}
     * @memberof LeadsApiSearchLeads
     */
    readonly include_fields?: 'lead.was_seen';
    /**
     * Pagination start. Note that the pagination is based on main results and does not include related items when using &#x60;search_for_related_items&#x60; parameter.
     * @type {number}
     * @memberof LeadsApiSearchLeads
     */
    readonly start?: number;
    /**
     * Items shown per page
     * @type {number}
     * @memberof LeadsApiSearchLeads
     */
    readonly limit?: number;
}
/**
 * Request parameters for updateLead operation in LeadsApi.
 * @export
 * @interface LeadsApiUpdateLeadRequest
 */
export interface LeadsApiUpdateLeadRequest {
    /**
     * The ID of the lead
     * @type {string}
     * @memberof LeadsApiUpdateLead
     */
    readonly id: string;
    /**
     *
     * @type {UpdateLeadRequest}
     * @memberof LeadsApiUpdateLead
     */
    readonly UpdateLeadRequest?: UpdateLeadRequest;
}
/**
 * LeadsApi - object-oriented interface
 * @export
 * @class LeadsApi
 * @extends {BaseAPI}
 */
export declare class LeadsApi extends BaseAPI {
    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source and origin set to `API`. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * @summary Add a lead
     * @param {LeadsApiAddLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    addLead(requestParameters?: LeadsApiAddLeadRequest): Promise<GetLeadResponse>;
    /**
     * Deletes a specific lead.
     * @summary Delete a lead
     * @param {LeadsApiDeleteLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    deleteLead(requestParameters: LeadsApiDeleteLeadRequest): Promise<GetLeadIdResponse>;
    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * @summary Get one lead
     * @param {LeadsApiGetLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    getLead(requestParameters: LeadsApiGetLeadRequest): Promise<GetLeadResponse>;
    /**
     * Lists the users permitted to access a lead.
     * @summary List permitted users
     * @param {LeadsApiGetLeadUsersRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    getLeadUsers(requestParameters: LeadsApiGetLeadUsersRequest): Promise<UserIds>;
    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals.
     * @summary Get all leads
     * @param {LeadsApiGetLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    getLeads(requestParameters?: LeadsApiGetLeadsRequest): Promise<GetLeadsResponse>;
    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {LeadsApiSearchLeadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    searchLeads(requestParameters: LeadsApiSearchLeadsRequest): Promise<GetLeadSearchResponse>;
    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * @summary Update a lead
     * @param {LeadsApiUpdateLeadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof LeadsApi
     */
    updateLead(requestParameters: LeadsApiUpdateLeadRequest): Promise<GetLeadResponse>;
}
