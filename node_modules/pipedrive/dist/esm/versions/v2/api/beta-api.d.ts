/**
 * Pipedrive API v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AddAInstallmentResponse } from '../models';
import { AddInstallmentRequestBody } from '../models';
import { DeleteInstallmentResponse } from '../models';
import { GetInstallmentsResponse } from '../models';
import { UpdateInstallmentRequestBody } from '../models';
import { UpdateInstallmentResponse } from '../models';
/**
 * BetaApi - axios parameter creator
 * @export
 */
export declare const BetaApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Removes an installment from a deal.  Only available in Advanced and above plans.
     * @summary Delete an installment from a deal
     * @param {number} id The ID of the deal
     * @param {number} installment_id The ID of the installment

     * @throws {RequiredError}
     */
    deleteInstallment: (id: number, installment_id: number) => Promise<RequestArgs>;
    /**
     * Lists installments attached to a list of deals.  Only available in Advanced and above plans.
     * @summary List installments added to a list of deals
     * @param {Array<number>} deal_ids An array of integers with the IDs of the deals for which the attached installments will be returned. A maximum of 100 deal IDs can be provided.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'billing_date' | 'deal_id'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;billing_date&#x60;, &#x60;deal_id&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getInstallments: (deal_ids: Array<number>, cursor?: string, limit?: number, sort_by?: 'id' | 'billing_date' | 'deal_id', sort_direction?: 'asc' | 'desc') => Promise<RequestArgs>;
    /**
     * Adds an installment to a deal.  An installment can only be added if the deal includes at least one one-time product.  If the deal contains at least one recurring product, adding installments is not allowed.  Only available in Advanced and above plans.
     * @summary Add an installment to a deal
     * @param {number} id The ID of the deal
     * @param {AddInstallmentRequestBody} [AddInstallmentRequestBody]

     * @throws {RequiredError}
     */
    postInstallment: (id: number, AddInstallmentRequestBody?: AddInstallmentRequestBody) => Promise<RequestArgs>;
    /**
     * Edits an installment added to a deal.  Only available in Advanced and above plans.
     * @summary Update an installment added to a deal
     * @param {number} id The ID of the deal
     * @param {number} installment_id The ID of the installment
     * @param {UpdateInstallmentRequestBody} [UpdateInstallmentRequestBody]

     * @throws {RequiredError}
     */
    updateInstallment: (id: number, installment_id: number, UpdateInstallmentRequestBody?: UpdateInstallmentRequestBody) => Promise<RequestArgs>;
};
/**
 * BetaApi - functional programming interface
 * @export
 */
export declare const BetaApiFp: (configuration?: Configuration) => {
    /**
     * Removes an installment from a deal.  Only available in Advanced and above plans.
     * @summary Delete an installment from a deal
     * @param {number} id The ID of the deal
     * @param {number} installment_id The ID of the installment

     * @throws {RequiredError}
     */
    deleteInstallment(id: number, installment_id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteInstallmentResponse>>;
    /**
     * Lists installments attached to a list of deals.  Only available in Advanced and above plans.
     * @summary List installments added to a list of deals
     * @param {Array<number>} deal_ids An array of integers with the IDs of the deals for which the attached installments will be returned. A maximum of 100 deal IDs can be provided.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {'id' | 'billing_date' | 'deal_id'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;billing_date&#x60;, &#x60;deal_id&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.

     * @throws {RequiredError}
     */
    getInstallments(deal_ids: Array<number>, cursor?: string, limit?: number, sort_by?: 'id' | 'billing_date' | 'deal_id', sort_direction?: 'asc' | 'desc'): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetInstallmentsResponse>>;
    /**
     * Adds an installment to a deal.  An installment can only be added if the deal includes at least one one-time product.  If the deal contains at least one recurring product, adding installments is not allowed.  Only available in Advanced and above plans.
     * @summary Add an installment to a deal
     * @param {number} id The ID of the deal
     * @param {AddInstallmentRequestBody} [AddInstallmentRequestBody]

     * @throws {RequiredError}
     */
    postInstallment(id: number, AddInstallmentRequestBody?: AddInstallmentRequestBody): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AddAInstallmentResponse>>;
    /**
     * Edits an installment added to a deal.  Only available in Advanced and above plans.
     * @summary Update an installment added to a deal
     * @param {number} id The ID of the deal
     * @param {number} installment_id The ID of the installment
     * @param {UpdateInstallmentRequestBody} [UpdateInstallmentRequestBody]

     * @throws {RequiredError}
     */
    updateInstallment(id: number, installment_id: number, UpdateInstallmentRequestBody?: UpdateInstallmentRequestBody): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpdateInstallmentResponse>>;
};
/**
 * BetaApi - factory interface
 * @export
 */
export declare const BetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Removes an installment from a deal.  Only available in Advanced and above plans.
     * @summary Delete an installment from a deal
     * @param {BetaApiDeleteInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteInstallment(requestParameters: BetaApiDeleteInstallmentRequest): Promise<DeleteInstallmentResponse>;
    /**
     * Lists installments attached to a list of deals.  Only available in Advanced and above plans.
     * @summary List installments added to a list of deals
     * @param {BetaApiGetInstallmentsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getInstallments(requestParameters: BetaApiGetInstallmentsRequest): Promise<GetInstallmentsResponse>;
    /**
     * Adds an installment to a deal.  An installment can only be added if the deal includes at least one one-time product.  If the deal contains at least one recurring product, adding installments is not allowed.  Only available in Advanced and above plans.
     * @summary Add an installment to a deal
     * @param {BetaApiPostInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    postInstallment(requestParameters: BetaApiPostInstallmentRequest): Promise<AddAInstallmentResponse>;
    /**
     * Edits an installment added to a deal.  Only available in Advanced and above plans.
     * @summary Update an installment added to a deal
     * @param {BetaApiUpdateInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateInstallment(requestParameters: BetaApiUpdateInstallmentRequest): Promise<UpdateInstallmentResponse>;
};
/**
 * Request parameters for deleteInstallment operation in BetaApi.
 * @export
 * @interface BetaApiDeleteInstallmentRequest
 */
export interface BetaApiDeleteInstallmentRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiDeleteInstallment
     */
    readonly id: number;
    /**
     * The ID of the installment
     * @type {number}
     * @memberof BetaApiDeleteInstallment
     */
    readonly installment_id: number;
}
/**
 * Request parameters for getInstallments operation in BetaApi.
 * @export
 * @interface BetaApiGetInstallmentsRequest
 */
export interface BetaApiGetInstallmentsRequest {
    /**
     * An array of integers with the IDs of the deals for which the attached installments will be returned. A maximum of 100 deal IDs can be provided.
     * @type {Array<number>}
     * @memberof BetaApiGetInstallments
     */
    readonly deal_ids: Array<number>;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof BetaApiGetInstallments
     */
    readonly cursor?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof BetaApiGetInstallments
     */
    readonly limit?: number;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;billing_date&#x60;, &#x60;deal_id&#x60;.
     * @type {'id' | 'billing_date' | 'deal_id'}
     * @memberof BetaApiGetInstallments
     */
    readonly sort_by?: 'id' | 'billing_date' | 'deal_id';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof BetaApiGetInstallments
     */
    readonly sort_direction?: 'asc' | 'desc';
}
/**
 * Request parameters for postInstallment operation in BetaApi.
 * @export
 * @interface BetaApiPostInstallmentRequest
 */
export interface BetaApiPostInstallmentRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiPostInstallment
     */
    readonly id: number;
    /**
     *
     * @type {AddInstallmentRequestBody}
     * @memberof BetaApiPostInstallment
     */
    readonly AddInstallmentRequestBody?: AddInstallmentRequestBody;
}
/**
 * Request parameters for updateInstallment operation in BetaApi.
 * @export
 * @interface BetaApiUpdateInstallmentRequest
 */
export interface BetaApiUpdateInstallmentRequest {
    /**
     * The ID of the deal
     * @type {number}
     * @memberof BetaApiUpdateInstallment
     */
    readonly id: number;
    /**
     * The ID of the installment
     * @type {number}
     * @memberof BetaApiUpdateInstallment
     */
    readonly installment_id: number;
    /**
     *
     * @type {UpdateInstallmentRequestBody}
     * @memberof BetaApiUpdateInstallment
     */
    readonly UpdateInstallmentRequestBody?: UpdateInstallmentRequestBody;
}
/**
 * BetaApi - object-oriented interface
 * @export
 * @class BetaApi
 * @extends {BaseAPI}
 */
export declare class BetaApi extends BaseAPI {
    /**
     * Removes an installment from a deal.  Only available in Advanced and above plans.
     * @summary Delete an installment from a deal
     * @param {BetaApiDeleteInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    deleteInstallment(requestParameters: BetaApiDeleteInstallmentRequest): Promise<DeleteInstallmentResponse>;
    /**
     * Lists installments attached to a list of deals.  Only available in Advanced and above plans.
     * @summary List installments added to a list of deals
     * @param {BetaApiGetInstallmentsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    getInstallments(requestParameters: BetaApiGetInstallmentsRequest): Promise<GetInstallmentsResponse>;
    /**
     * Adds an installment to a deal.  An installment can only be added if the deal includes at least one one-time product.  If the deal contains at least one recurring product, adding installments is not allowed.  Only available in Advanced and above plans.
     * @summary Add an installment to a deal
     * @param {BetaApiPostInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    postInstallment(requestParameters: BetaApiPostInstallmentRequest): Promise<AddAInstallmentResponse>;
    /**
     * Edits an installment added to a deal.  Only available in Advanced and above plans.
     * @summary Update an installment added to a deal
     * @param {BetaApiUpdateInstallmentRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof BetaApi
     */
    updateInstallment(requestParameters: BetaApiUpdateInstallmentRequest): Promise<UpdateInstallmentResponse>;
}
