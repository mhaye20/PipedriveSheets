/**
 * Pipedrive API v2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AddDealFollowerRequest } from '../models';
import { AddFollowerResponse } from '../models';
import { AddOrganizationRequest } from '../models';
import { DeleteFollowerResponse } from '../models';
import { DeleteOrganizationResponse } from '../models';
import { GetFollowerChangelogsResponse } from '../models';
import { GetFollowersResponse } from '../models';
import { GetOrganizationSearchResponse } from '../models';
import { GetOrganizationsResponse } from '../models';
import { UpdateOrganizationRequest } from '../models';
import { UpsertOrganizationResponse } from '../models';
/**
 * OrganizationsApi - axios parameter creator
 * @export
 */
export declare const OrganizationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {AddOrganizationRequest} [AddOrganizationRequest]

     * @throws {RequiredError}
     */
    addOrganization: (AddOrganizationRequest?: AddOrganizationRequest) => Promise<RequestArgs>;
    /**
     * Adds a user as a follower to the organization.
     * @summary Add a follower to an organization
     * @param {number} id The ID of the organization
     * @param {AddDealFollowerRequest} [AddDealFollowerRequest]

     * @throws {RequiredError}
     */
    addOrganizationFollower: (id: number, AddDealFollowerRequest?: AddDealFollowerRequest) => Promise<RequestArgs>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {number} id The ID of the organization

     * @throws {RequiredError}
     */
    deleteOrganization: (id: number) => Promise<RequestArgs>;
    /**
     * Deletes a user follower from the organization.
     * @summary Delete a follower from an organization
     * @param {number} id The ID of the organization
     * @param {number} follower_id The ID of the following user

     * @throws {RequiredError}
     */
    deleteOrganizationFollower: (id: number, follower_id: number) => Promise<RequestArgs>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {number} id The ID of the organization
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getOrganization: (id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string) => Promise<RequestArgs>;
    /**
     * Lists users who are following the organization.
     * @summary List followers of an organization
     * @param {number} id The ID of the organization
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizationFollowers: (id: number, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Lists changelogs about users have followed the organization.
     * @summary List followers changelog of an organization
     * @param {number} id The ID of the organization
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizationFollowersChangelog: (id: number, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {number} [filter_id] If supplied, only organizations matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizations: (filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'address' | 'custom_fields' | 'notes' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchOrganization: (term: string, fields?: 'address' | 'custom_fields' | 'notes' | 'name', exact_match?: boolean, limit?: number, cursor?: string) => Promise<RequestArgs>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {number} id The ID of the organization
     * @param {UpdateOrganizationRequest} [UpdateOrganizationRequest]

     * @throws {RequiredError}
     */
    updateOrganization: (id: number, UpdateOrganizationRequest?: UpdateOrganizationRequest) => Promise<RequestArgs>;
};
/**
 * OrganizationsApi - functional programming interface
 * @export
 */
export declare const OrganizationsApiFp: (configuration?: Configuration) => {
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {AddOrganizationRequest} [AddOrganizationRequest]

     * @throws {RequiredError}
     */
    addOrganization(AddOrganizationRequest?: AddOrganizationRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
    /**
     * Adds a user as a follower to the organization.
     * @summary Add a follower to an organization
     * @param {number} id The ID of the organization
     * @param {AddDealFollowerRequest} [AddDealFollowerRequest]

     * @throws {RequiredError}
     */
    addOrganizationFollower(id: number, AddDealFollowerRequest?: AddDealFollowerRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AddFollowerResponse>>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {number} id The ID of the organization

     * @throws {RequiredError}
     */
    deleteOrganization(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteOrganizationResponse>>;
    /**
     * Deletes a user follower from the organization.
     * @summary Delete a follower from an organization
     * @param {number} id The ID of the organization
     * @param {number} follower_id The ID of the following user

     * @throws {RequiredError}
     */
    deleteOrganizationFollower(id: number, follower_id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteFollowerResponse>>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {number} id The ID of the organization
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.

     * @throws {RequiredError}
     */
    getOrganization(id: number, include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
    /**
     * Lists users who are following the organization.
     * @summary List followers of an organization
     * @param {number} id The ID of the organization
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizationFollowers(id: number, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFollowersResponse>>;
    /**
     * Lists changelogs about users have followed the organization.
     * @summary List followers changelog of an organization
     * @param {number} id The ID of the organization
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizationFollowersChangelog(id: number, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFollowerChangelogsResponse>>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {number} [filter_id] If supplied, only organizations matching the specified filter are returned
     * @param {string} [ids] Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @param {number} [owner_id] If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @param {string} [updated_since] If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {string} [updated_until] If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @param {'id' | 'update_time' | 'add_time'} [sort_by] The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @param {'asc' | 'desc'} [sort_direction] The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @param {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'} [include_fields] Optional comma separated string array of additional fields to include
     * @param {string} [custom_fields] Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    getOrganizations(filter_id?: number, ids?: string, owner_id?: number, updated_since?: string, updated_until?: string, sort_by?: 'id' | 'update_time' | 'add_time', sort_direction?: 'asc' | 'desc', include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count', custom_fields?: string, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetOrganizationsResponse>>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @param {'address' | 'custom_fields' | 'notes' | 'name'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @param {boolean} [exact_match] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @param {string} [cursor] For pagination, the marker (an opaque string value) representing the first item on the next page

     * @throws {RequiredError}
     */
    searchOrganization(term: string, fields?: 'address' | 'custom_fields' | 'notes' | 'name', exact_match?: boolean, limit?: number, cursor?: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetOrganizationSearchResponse>>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {number} id The ID of the organization
     * @param {UpdateOrganizationRequest} [UpdateOrganizationRequest]

     * @throws {RequiredError}
     */
    updateOrganization(id: number, UpdateOrganizationRequest?: UpdateOrganizationRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpsertOrganizationResponse>>;
};
/**
 * OrganizationsApi - factory interface
 * @export
 */
export declare const OrganizationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {OrganizationsApiAddOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addOrganization(requestParameters?: OrganizationsApiAddOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Adds a user as a follower to the organization.
     * @summary Add a follower to an organization
     * @param {OrganizationsApiAddOrganizationFollowerRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addOrganizationFollower(requestParameters: OrganizationsApiAddOrganizationFollowerRequest): Promise<AddFollowerResponse>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {OrganizationsApiDeleteOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteOrganization(requestParameters: OrganizationsApiDeleteOrganizationRequest): Promise<DeleteOrganizationResponse>;
    /**
     * Deletes a user follower from the organization.
     * @summary Delete a follower from an organization
     * @param {OrganizationsApiDeleteOrganizationFollowerRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteOrganizationFollower(requestParameters: OrganizationsApiDeleteOrganizationFollowerRequest): Promise<DeleteFollowerResponse>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {OrganizationsApiGetOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganization(requestParameters: OrganizationsApiGetOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Lists users who are following the organization.
     * @summary List followers of an organization
     * @param {OrganizationsApiGetOrganizationFollowersRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganizationFollowers(requestParameters: OrganizationsApiGetOrganizationFollowersRequest): Promise<GetFollowersResponse>;
    /**
     * Lists changelogs about users have followed the organization.
     * @summary List followers changelog of an organization
     * @param {OrganizationsApiGetOrganizationFollowersChangelogRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganizationFollowersChangelog(requestParameters: OrganizationsApiGetOrganizationFollowersChangelogRequest): Promise<GetFollowerChangelogsResponse>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {OrganizationsApiGetOrganizationsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getOrganizations(requestParameters?: OrganizationsApiGetOrganizationsRequest): Promise<GetOrganizationsResponse>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {OrganizationsApiSearchOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    searchOrganization(requestParameters: OrganizationsApiSearchOrganizationRequest): Promise<GetOrganizationSearchResponse>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {OrganizationsApiUpdateOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateOrganization(requestParameters: OrganizationsApiUpdateOrganizationRequest): Promise<UpsertOrganizationResponse>;
};
/**
 * Request parameters for addOrganization operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiAddOrganizationRequest
 */
export interface OrganizationsApiAddOrganizationRequest {
    /**
     *
     * @type {AddOrganizationRequest}
     * @memberof OrganizationsApiAddOrganization
     */
    readonly AddOrganizationRequest?: AddOrganizationRequest;
}
/**
 * Request parameters for addOrganizationFollower operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiAddOrganizationFollowerRequest
 */
export interface OrganizationsApiAddOrganizationFollowerRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiAddOrganizationFollower
     */
    readonly id: number;
    /**
     *
     * @type {AddDealFollowerRequest}
     * @memberof OrganizationsApiAddOrganizationFollower
     */
    readonly AddDealFollowerRequest?: AddDealFollowerRequest;
}
/**
 * Request parameters for deleteOrganization operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiDeleteOrganizationRequest
 */
export interface OrganizationsApiDeleteOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiDeleteOrganization
     */
    readonly id: number;
}
/**
 * Request parameters for deleteOrganizationFollower operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiDeleteOrganizationFollowerRequest
 */
export interface OrganizationsApiDeleteOrganizationFollowerRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiDeleteOrganizationFollower
     */
    readonly id: number;
    /**
     * The ID of the following user
     * @type {number}
     * @memberof OrganizationsApiDeleteOrganizationFollower
     */
    readonly follower_id: number;
}
/**
 * Request parameters for getOrganization operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiGetOrganizationRequest
 */
export interface OrganizationsApiGetOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiGetOrganization
     */
    readonly id: number;
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'}
     * @memberof OrganizationsApiGetOrganization
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof OrganizationsApiGetOrganization
     */
    readonly custom_fields?: string;
}
/**
 * Request parameters for getOrganizationFollowers operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiGetOrganizationFollowersRequest
 */
export interface OrganizationsApiGetOrganizationFollowersRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiGetOrganizationFollowers
     */
    readonly id: number;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof OrganizationsApiGetOrganizationFollowers
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof OrganizationsApiGetOrganizationFollowers
     */
    readonly cursor?: string;
}
/**
 * Request parameters for getOrganizationFollowersChangelog operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiGetOrganizationFollowersChangelogRequest
 */
export interface OrganizationsApiGetOrganizationFollowersChangelogRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiGetOrganizationFollowersChangelog
     */
    readonly id: number;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof OrganizationsApiGetOrganizationFollowersChangelog
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof OrganizationsApiGetOrganizationFollowersChangelog
     */
    readonly cursor?: string;
}
/**
 * Request parameters for getOrganizations operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiGetOrganizationsRequest
 */
export interface OrganizationsApiGetOrganizationsRequest {
    /**
     * If supplied, only organizations matching the specified filter are returned
     * @type {number}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly filter_id?: number;
    /**
     * Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.
     * @type {string}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly ids?: string;
    /**
     * If supplied, only organization owned by the specified user are returned. If filter_id is provided, this is ignored.
     * @type {number}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly owner_id?: number;
    /**
     * If set, only organizations with an &#x60;update_time&#x60; later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly updated_since?: string;
    /**
     * If set, only organizations with an &#x60;update_time&#x60; earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.
     * @type {string}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly updated_until?: string;
    /**
     * The field to sort by. Supported fields: &#x60;id&#x60;, &#x60;update_time&#x60;, &#x60;add_time&#x60;.
     * @type {'id' | 'update_time' | 'add_time'}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly sort_by?: 'id' | 'update_time' | 'add_time';
    /**
     * The sorting direction. Supported values: &#x60;asc&#x60;, &#x60;desc&#x60;.
     * @type {'asc' | 'desc'}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly sort_direction?: 'asc' | 'desc';
    /**
     * Optional comma separated string array of additional fields to include
     * @type {'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count'}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly include_fields?: 'next_activity_id' | 'last_activity_id' | 'open_deals_count' | 'related_open_deals_count' | 'closed_deals_count' | 'related_closed_deals_count' | 'email_messages_count' | 'people_count' | 'activities_count' | 'done_activities_count' | 'undone_activities_count' | 'files_count' | 'notes_count' | 'followers_count' | 'won_deals_count' | 'related_won_deals_count' | 'lost_deals_count' | 'related_lost_deals_count';
    /**
     * Optional comma separated string array of custom fields keys to include. If you are only interested in a particular set of custom fields, please use this parameter for faster results and smaller response.&lt;br/&gt;A maximum of 15 keys is allowed.
     * @type {string}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly custom_fields?: string;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof OrganizationsApiGetOrganizations
     */
    readonly cursor?: string;
}
/**
 * Request parameters for searchOrganization operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiSearchOrganizationRequest
 */
export interface OrganizationsApiSearchOrganizationRequest {
    /**
     * The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;). Please note that the search term has to be URL encoded.
     * @type {string}
     * @memberof OrganizationsApiSearchOrganization
     */
    readonly term: string;
    /**
     * A comma-separated string array. The fields to perform the search from. Defaults to all of them. Only the following custom field types are searchable: &#x60;address&#x60;, &#x60;varchar&#x60;, &#x60;text&#x60;, &#x60;varchar_auto&#x60;, &#x60;double&#x60;, &#x60;monetary&#x60; and &#x60;phone&#x60;. Read more about searching by custom fields &lt;a href&#x3D;\&quot;https://support.pipedrive.com/en/article/search-finding-what-you-need#searching-by-custom-fields\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;here&lt;/a&gt;.
     * @type {'address' | 'custom_fields' | 'notes' | 'name'}
     * @memberof OrganizationsApiSearchOrganization
     */
    readonly fields?: 'address' | 'custom_fields' | 'notes' | 'name';
    /**
     * When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @type {boolean}
     * @memberof OrganizationsApiSearchOrganization
     */
    readonly exact_match?: boolean;
    /**
     * For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.
     * @type {number}
     * @memberof OrganizationsApiSearchOrganization
     */
    readonly limit?: number;
    /**
     * For pagination, the marker (an opaque string value) representing the first item on the next page
     * @type {string}
     * @memberof OrganizationsApiSearchOrganization
     */
    readonly cursor?: string;
}
/**
 * Request parameters for updateOrganization operation in OrganizationsApi.
 * @export
 * @interface OrganizationsApiUpdateOrganizationRequest
 */
export interface OrganizationsApiUpdateOrganizationRequest {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof OrganizationsApiUpdateOrganization
     */
    readonly id: number;
    /**
     *
     * @type {UpdateOrganizationRequest}
     * @memberof OrganizationsApiUpdateOrganization
     */
    readonly UpdateOrganizationRequest?: UpdateOrganizationRequest;
}
/**
 * OrganizationsApi - object-oriented interface
 * @export
 * @class OrganizationsApi
 * @extends {BaseAPI}
 */
export declare class OrganizationsApi extends BaseAPI {
    /**
     * Adds a new organization.
     * @summary Add a new organization
     * @param {OrganizationsApiAddOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    addOrganization(requestParameters?: OrganizationsApiAddOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Adds a user as a follower to the organization.
     * @summary Add a follower to an organization
     * @param {OrganizationsApiAddOrganizationFollowerRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    addOrganizationFollower(requestParameters: OrganizationsApiAddOrganizationFollowerRequest): Promise<AddFollowerResponse>;
    /**
     * Marks a organization as deleted. After 30 days, the organization will be permanently deleted.
     * @summary Delete a organization
     * @param {OrganizationsApiDeleteOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    deleteOrganization(requestParameters: OrganizationsApiDeleteOrganizationRequest): Promise<DeleteOrganizationResponse>;
    /**
     * Deletes a user follower from the organization.
     * @summary Delete a follower from an organization
     * @param {OrganizationsApiDeleteOrganizationFollowerRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    deleteOrganizationFollower(requestParameters: OrganizationsApiDeleteOrganizationFollowerRequest): Promise<DeleteFollowerResponse>;
    /**
     * Returns the details of a specific organization.
     * @summary Get details of a organization
     * @param {OrganizationsApiGetOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getOrganization(requestParameters: OrganizationsApiGetOrganizationRequest): Promise<UpsertOrganizationResponse>;
    /**
     * Lists users who are following the organization.
     * @summary List followers of an organization
     * @param {OrganizationsApiGetOrganizationFollowersRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getOrganizationFollowers(requestParameters: OrganizationsApiGetOrganizationFollowersRequest): Promise<GetFollowersResponse>;
    /**
     * Lists changelogs about users have followed the organization.
     * @summary List followers changelog of an organization
     * @param {OrganizationsApiGetOrganizationFollowersChangelogRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getOrganizationFollowersChangelog(requestParameters: OrganizationsApiGetOrganizationFollowersChangelogRequest): Promise<GetFollowerChangelogsResponse>;
    /**
     * Returns data about all organizations.
     * @summary Get all organizations
     * @param {OrganizationsApiGetOrganizationsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getOrganizations(requestParameters?: OrganizationsApiGetOrganizationsRequest): Promise<GetOrganizationsResponse>;
    /**
     * Searches all organizations by name, address, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope.
     * @summary Search organizations
     * @param {OrganizationsApiSearchOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    searchOrganization(requestParameters: OrganizationsApiSearchOrganizationRequest): Promise<GetOrganizationSearchResponse>;
    /**
     * Updates the properties of a organization.
     * @summary Update a organization
     * @param {OrganizationsApiUpdateOrganizationRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    updateOrganization(requestParameters: OrganizationsApiUpdateOrganizationRequest): Promise<UpsertOrganizationResponse>;
}
