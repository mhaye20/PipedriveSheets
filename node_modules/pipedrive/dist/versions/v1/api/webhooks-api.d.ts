/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AddWebhookRequest } from '../models';
import { BaseResponse } from '../models';
import { GetWebhookResponse } from '../models';
import { GetWebhooksResponse } from '../models';
/**
 * WebhooksApi - axios parameter creator
 * @export
 */
export declare const WebhooksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.
     * @summary Create a new Webhook
     * @param {AddWebhookRequest} [AddWebhookRequest]

     * @throws {RequiredError}
     */
    addWebhook: (AddWebhookRequest?: AddWebhookRequest) => Promise<RequestArgs>;
    /**
     * Deletes the specified Webhook.
     * @summary Delete existing Webhook
     * @param {number} id The ID of the Webhook to delete

     * @throws {RequiredError}
     */
    deleteWebhook: (id: number) => Promise<RequestArgs>;
    /**
     * Returns data about all the Webhooks of a company.
     * @summary Get all Webhooks

     * @throws {RequiredError}
     */
    getWebhooks: () => Promise<RequestArgs>;
};
/**
 * WebhooksApi - functional programming interface
 * @export
 */
export declare const WebhooksApiFp: (configuration?: Configuration) => {
    /**
     * Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.
     * @summary Create a new Webhook
     * @param {AddWebhookRequest} [AddWebhookRequest]

     * @throws {RequiredError}
     */
    addWebhook(AddWebhookRequest?: AddWebhookRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetWebhookResponse>>;
    /**
     * Deletes the specified Webhook.
     * @summary Delete existing Webhook
     * @param {number} id The ID of the Webhook to delete

     * @throws {RequiredError}
     */
    deleteWebhook(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<BaseResponse>>;
    /**
     * Returns data about all the Webhooks of a company.
     * @summary Get all Webhooks

     * @throws {RequiredError}
     */
    getWebhooks(): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetWebhooksResponse>>;
};
/**
 * WebhooksApi - factory interface
 * @export
 */
export declare const WebhooksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.
     * @summary Create a new Webhook
     * @param {WebhooksApiAddWebhookRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addWebhook(requestParameters?: WebhooksApiAddWebhookRequest): Promise<GetWebhookResponse>;
    /**
     * Deletes the specified Webhook.
     * @summary Delete existing Webhook
     * @param {WebhooksApiDeleteWebhookRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteWebhook(requestParameters: WebhooksApiDeleteWebhookRequest): Promise<BaseResponse>;
    /**
     * Returns data about all the Webhooks of a company.
     * @summary Get all Webhooks

     * @throws {RequiredError}
     */
    getWebhooks(): Promise<GetWebhooksResponse>;
};
/**
 * Request parameters for addWebhook operation in WebhooksApi.
 * @export
 * @interface WebhooksApiAddWebhookRequest
 */
export interface WebhooksApiAddWebhookRequest {
    /**
     *
     * @type {AddWebhookRequest}
     * @memberof WebhooksApiAddWebhook
     */
    readonly AddWebhookRequest?: AddWebhookRequest;
}
/**
 * Request parameters for deleteWebhook operation in WebhooksApi.
 * @export
 * @interface WebhooksApiDeleteWebhookRequest
 */
export interface WebhooksApiDeleteWebhookRequest {
    /**
     * The ID of the Webhook to delete
     * @type {number}
     * @memberof WebhooksApiDeleteWebhook
     */
    readonly id: number;
}
/**
 * WebhooksApi - object-oriented interface
 * @export
 * @class WebhooksApi
 * @extends {BaseAPI}
 */
export declare class WebhooksApi extends BaseAPI {
    /**
     * Creates a new Webhook and returns its details. Note that specifying an event which triggers the Webhook combines 2 parameters - `event_action` and `event_object`. E.g., use `*.*` for getting notifications about all events, `create.deal` for any newly added deals, `delete.persons` for any deleted persons, etc. See <a href=\"https://pipedrive.readme.io/docs/guide-for-webhooks-v2?ref=api_reference\" target=\"_blank\" rel=\"noopener noreferrer\">the guide for Webhooks</a> for more details.
     * @summary Create a new Webhook
     * @param {WebhooksApiAddWebhookRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    addWebhook(requestParameters?: WebhooksApiAddWebhookRequest): Promise<GetWebhookResponse>;
    /**
     * Deletes the specified Webhook.
     * @summary Delete existing Webhook
     * @param {WebhooksApiDeleteWebhookRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    deleteWebhook(requestParameters: WebhooksApiDeleteWebhookRequest): Promise<BaseResponse>;
    /**
     * Returns data about all the Webhooks of a company.
     * @summary Get all Webhooks

     * @throws {RequiredError}
     * @memberof WebhooksApi
     */
    getWebhooks(): Promise<GetWebhooksResponse>;
}
