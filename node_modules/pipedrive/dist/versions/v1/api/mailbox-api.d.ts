/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { DeleteMailThreadResponse } from '../models';
import { GetMailMessageResponse } from '../models';
import { GetMailThreadMessagesResponse } from '../models';
import { GetMailThreadResponse } from '../models';
import { GetMailThreadResponse1 } from '../models';
import { UpdateMailThreadResponse } from '../models';
/**
 * MailboxApi - axios parameter creator
 * @export
 */
export declare const MailboxApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Marks a mail thread as deleted.
     * @summary Delete mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    deleteMailThread: (id: number) => Promise<RequestArgs>;
    /**
     * Returns data about a specific mail message.
     * @summary Get one mail message
     * @param {number} id The ID of the mail message to fetch
     * @param {0 | 1} [include_body] Whether to include the full message body or not. &#x60;0&#x60; &#x3D; Don\&#39;t include, &#x60;1&#x60; &#x3D; Include.

     * @throws {RequiredError}
     */
    getMailMessage: (id: number, include_body?: 0 | 1) => Promise<RequestArgs>;
    /**
     * Returns a specific mail thread.
     * @summary Get one mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    getMailThread: (id: number) => Promise<RequestArgs>;
    /**
     * Returns all the mail messages inside a specified mail thread.
     * @summary Get all mail messages of mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    getMailThreadMessages: (id: number) => Promise<RequestArgs>;
    /**
     * Returns mail threads in a specified folder ordered by the most recent message within.
     * @summary Get mail threads
     * @param {'inbox' | 'drafts' | 'sent' | 'archive'} folder The type of folder to fetch
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getMailThreads: (folder: 'inbox' | 'drafts' | 'sent' | 'archive', start?: number, limit?: number) => Promise<RequestArgs>;
    /**
     * Updates the properties of a mail thread.
     * @summary Update mail thread details
     * @param {number} id The ID of the mail thread
     * @param {number} [deal_id] The ID of the deal this thread is associated with
     * @param {string} [lead_id] The ID of the lead this thread is associated with
     * @param {number} [shared_flag]
     * @param {number} [read_flag]
     * @param {number} [archived_flag]

     * @throws {RequiredError}
     */
    updateMailThreadDetails: (id: number, deal_id?: number, lead_id?: string, shared_flag?: number, read_flag?: number, archived_flag?: number) => Promise<RequestArgs>;
};
/**
 * MailboxApi - functional programming interface
 * @export
 */
export declare const MailboxApiFp: (configuration?: Configuration) => {
    /**
     * Marks a mail thread as deleted.
     * @summary Delete mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    deleteMailThread(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteMailThreadResponse>>;
    /**
     * Returns data about a specific mail message.
     * @summary Get one mail message
     * @param {number} id The ID of the mail message to fetch
     * @param {0 | 1} [include_body] Whether to include the full message body or not. &#x60;0&#x60; &#x3D; Don\&#39;t include, &#x60;1&#x60; &#x3D; Include.

     * @throws {RequiredError}
     */
    getMailMessage(id: number, include_body?: 0 | 1): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetMailMessageResponse>>;
    /**
     * Returns a specific mail thread.
     * @summary Get one mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    getMailThread(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetMailThreadResponse1>>;
    /**
     * Returns all the mail messages inside a specified mail thread.
     * @summary Get all mail messages of mail thread
     * @param {number} id The ID of the mail thread

     * @throws {RequiredError}
     */
    getMailThreadMessages(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetMailThreadMessagesResponse>>;
    /**
     * Returns mail threads in a specified folder ordered by the most recent message within.
     * @summary Get mail threads
     * @param {'inbox' | 'drafts' | 'sent' | 'archive'} folder The type of folder to fetch
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getMailThreads(folder: 'inbox' | 'drafts' | 'sent' | 'archive', start?: number, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetMailThreadResponse>>;
    /**
     * Updates the properties of a mail thread.
     * @summary Update mail thread details
     * @param {number} id The ID of the mail thread
     * @param {number} [deal_id] The ID of the deal this thread is associated with
     * @param {string} [lead_id] The ID of the lead this thread is associated with
     * @param {number} [shared_flag]
     * @param {number} [read_flag]
     * @param {number} [archived_flag]

     * @throws {RequiredError}
     */
    updateMailThreadDetails(id: number, deal_id?: number, lead_id?: string, shared_flag?: number, read_flag?: number, archived_flag?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<UpdateMailThreadResponse>>;
};
/**
 * MailboxApi - factory interface
 * @export
 */
export declare const MailboxApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Marks a mail thread as deleted.
     * @summary Delete mail thread
     * @param {MailboxApiDeleteMailThreadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteMailThread(requestParameters: MailboxApiDeleteMailThreadRequest): Promise<DeleteMailThreadResponse>;
    /**
     * Returns data about a specific mail message.
     * @summary Get one mail message
     * @param {MailboxApiGetMailMessageRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getMailMessage(requestParameters: MailboxApiGetMailMessageRequest): Promise<GetMailMessageResponse>;
    /**
     * Returns a specific mail thread.
     * @summary Get one mail thread
     * @param {MailboxApiGetMailThreadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getMailThread(requestParameters: MailboxApiGetMailThreadRequest): Promise<GetMailThreadResponse1>;
    /**
     * Returns all the mail messages inside a specified mail thread.
     * @summary Get all mail messages of mail thread
     * @param {MailboxApiGetMailThreadMessagesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getMailThreadMessages(requestParameters: MailboxApiGetMailThreadMessagesRequest): Promise<GetMailThreadMessagesResponse>;
    /**
     * Returns mail threads in a specified folder ordered by the most recent message within.
     * @summary Get mail threads
     * @param {MailboxApiGetMailThreadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getMailThreads(requestParameters: MailboxApiGetMailThreadsRequest): Promise<GetMailThreadResponse>;
    /**
     * Updates the properties of a mail thread.
     * @summary Update mail thread details
     * @param {MailboxApiUpdateMailThreadDetailsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateMailThreadDetails(requestParameters: MailboxApiUpdateMailThreadDetailsRequest): Promise<UpdateMailThreadResponse>;
};
/**
 * Request parameters for deleteMailThread operation in MailboxApi.
 * @export
 * @interface MailboxApiDeleteMailThreadRequest
 */
export interface MailboxApiDeleteMailThreadRequest {
    /**
     * The ID of the mail thread
     * @type {number}
     * @memberof MailboxApiDeleteMailThread
     */
    readonly id: number;
}
/**
 * Request parameters for getMailMessage operation in MailboxApi.
 * @export
 * @interface MailboxApiGetMailMessageRequest
 */
export interface MailboxApiGetMailMessageRequest {
    /**
     * The ID of the mail message to fetch
     * @type {number}
     * @memberof MailboxApiGetMailMessage
     */
    readonly id: number;
    /**
     * Whether to include the full message body or not. &#x60;0&#x60; &#x3D; Don\&#39;t include, &#x60;1&#x60; &#x3D; Include.
     * @type {0 | 1}
     * @memberof MailboxApiGetMailMessage
     */
    readonly include_body?: 0 | 1;
}
/**
 * Request parameters for getMailThread operation in MailboxApi.
 * @export
 * @interface MailboxApiGetMailThreadRequest
 */
export interface MailboxApiGetMailThreadRequest {
    /**
     * The ID of the mail thread
     * @type {number}
     * @memberof MailboxApiGetMailThread
     */
    readonly id: number;
}
/**
 * Request parameters for getMailThreadMessages operation in MailboxApi.
 * @export
 * @interface MailboxApiGetMailThreadMessagesRequest
 */
export interface MailboxApiGetMailThreadMessagesRequest {
    /**
     * The ID of the mail thread
     * @type {number}
     * @memberof MailboxApiGetMailThreadMessages
     */
    readonly id: number;
}
/**
 * Request parameters for getMailThreads operation in MailboxApi.
 * @export
 * @interface MailboxApiGetMailThreadsRequest
 */
export interface MailboxApiGetMailThreadsRequest {
    /**
     * The type of folder to fetch
     * @type {'inbox' | 'drafts' | 'sent' | 'archive'}
     * @memberof MailboxApiGetMailThreads
     */
    readonly folder: 'inbox' | 'drafts' | 'sent' | 'archive';
    /**
     * Pagination start
     * @type {number}
     * @memberof MailboxApiGetMailThreads
     */
    readonly start?: number;
    /**
     * Items shown per page
     * @type {number}
     * @memberof MailboxApiGetMailThreads
     */
    readonly limit?: number;
}
/**
 * Request parameters for updateMailThreadDetails operation in MailboxApi.
 * @export
 * @interface MailboxApiUpdateMailThreadDetailsRequest
 */
export interface MailboxApiUpdateMailThreadDetailsRequest {
    /**
     * The ID of the mail thread
     * @type {number}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly id: number;
    /**
     * The ID of the deal this thread is associated with
     * @type {number}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly deal_id?: number;
    /**
     * The ID of the lead this thread is associated with
     * @type {string}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly lead_id?: string;
    /**
     *
     * @type {number}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly shared_flag?: number;
    /**
     *
     * @type {number}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly read_flag?: number;
    /**
     *
     * @type {number}
     * @memberof MailboxApiUpdateMailThreadDetails
     */
    readonly archived_flag?: number;
}
/**
 * MailboxApi - object-oriented interface
 * @export
 * @class MailboxApi
 * @extends {BaseAPI}
 */
export declare class MailboxApi extends BaseAPI {
    /**
     * Marks a mail thread as deleted.
     * @summary Delete mail thread
     * @param {MailboxApiDeleteMailThreadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    deleteMailThread(requestParameters: MailboxApiDeleteMailThreadRequest): Promise<DeleteMailThreadResponse>;
    /**
     * Returns data about a specific mail message.
     * @summary Get one mail message
     * @param {MailboxApiGetMailMessageRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    getMailMessage(requestParameters: MailboxApiGetMailMessageRequest): Promise<GetMailMessageResponse>;
    /**
     * Returns a specific mail thread.
     * @summary Get one mail thread
     * @param {MailboxApiGetMailThreadRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    getMailThread(requestParameters: MailboxApiGetMailThreadRequest): Promise<GetMailThreadResponse1>;
    /**
     * Returns all the mail messages inside a specified mail thread.
     * @summary Get all mail messages of mail thread
     * @param {MailboxApiGetMailThreadMessagesRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    getMailThreadMessages(requestParameters: MailboxApiGetMailThreadMessagesRequest): Promise<GetMailThreadMessagesResponse>;
    /**
     * Returns mail threads in a specified folder ordered by the most recent message within.
     * @summary Get mail threads
     * @param {MailboxApiGetMailThreadsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    getMailThreads(requestParameters: MailboxApiGetMailThreadsRequest): Promise<GetMailThreadResponse>;
    /**
     * Updates the properties of a mail thread.
     * @summary Update mail thread details
     * @param {MailboxApiUpdateMailThreadDetailsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof MailboxApi
     */
    updateMailThreadDetails(requestParameters: MailboxApiUpdateMailThreadDetailsRequest): Promise<UpdateMailThreadResponse>;
}
