/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosInstance } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { CreateFieldRequest } from '../models';
import { DeleteFieldsResponse } from '../models';
import { DeleteResponse } from '../models';
import { GetFieldResponse } from '../models';
import { GetFieldsResponse } from '../models';
import { UpdateFieldRequest } from '../models';
/**
 * DealFieldsApi - axios parameter creator
 * @export
 */
export declare const DealFieldsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new deal field
     * @param {CreateFieldRequest} [CreateFieldRequest]

     * @throws {RequiredError}
     */
    addDealField: (CreateFieldRequest?: CreateFieldRequest) => Promise<RequestArgs>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a deal field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    deleteDealField: (id: number) => Promise<RequestArgs>;
    /**
     * Marks multiple deal fields as deleted.
     * @summary Delete multiple deal fields in bulk
     * @param {string} ids The comma-separated field IDs to delete

     * @throws {RequiredError}
     */
    deleteDealFields: (ids: string) => Promise<RequestArgs>;
    /**
     * Returns data about a specific deal field.
     * @summary Get one deal field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    getDealField: (id: number) => Promise<RequestArgs>;
    /**
     * Returns data about all deal fields.
     * @summary Get all deal fields
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getDealFields: (start?: number, limit?: number) => Promise<RequestArgs>;
    /**
     * Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a deal field
     * @param {number} id The ID of the field
     * @param {UpdateFieldRequest} [UpdateFieldRequest]

     * @throws {RequiredError}
     */
    updateDealField: (id: number, UpdateFieldRequest?: UpdateFieldRequest) => Promise<RequestArgs>;
};
/**
 * DealFieldsApi - functional programming interface
 * @export
 */
export declare const DealFieldsApiFp: (configuration?: Configuration) => {
    /**
     * Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new deal field
     * @param {CreateFieldRequest} [CreateFieldRequest]

     * @throws {RequiredError}
     */
    addDealField(CreateFieldRequest?: CreateFieldRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a deal field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    deleteDealField(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteResponse>>;
    /**
     * Marks multiple deal fields as deleted.
     * @summary Delete multiple deal fields in bulk
     * @param {string} ids The comma-separated field IDs to delete

     * @throws {RequiredError}
     */
    deleteDealFields(ids: string): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<DeleteFieldsResponse>>;
    /**
     * Returns data about a specific deal field.
     * @summary Get one deal field
     * @param {number} id The ID of the field

     * @throws {RequiredError}
     */
    getDealField(id: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
    /**
     * Returns data about all deal fields.
     * @summary Get all deal fields
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page

     * @throws {RequiredError}
     */
    getDealFields(start?: number, limit?: number): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldsResponse>>;
    /**
     * Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a deal field
     * @param {number} id The ID of the field
     * @param {UpdateFieldRequest} [UpdateFieldRequest]

     * @throws {RequiredError}
     */
    updateDealField(id: number, UpdateFieldRequest?: UpdateFieldRequest): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<GetFieldResponse>>;
};
/**
 * DealFieldsApi - factory interface
 * @export
 */
export declare const DealFieldsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new deal field
     * @param {DealFieldsApiAddDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    addDealField(requestParameters?: DealFieldsApiAddDealFieldRequest): Promise<GetFieldResponse>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a deal field
     * @param {DealFieldsApiDeleteDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteDealField(requestParameters: DealFieldsApiDeleteDealFieldRequest): Promise<DeleteResponse>;
    /**
     * Marks multiple deal fields as deleted.
     * @summary Delete multiple deal fields in bulk
     * @param {DealFieldsApiDeleteDealFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    deleteDealFields(requestParameters: DealFieldsApiDeleteDealFieldsRequest): Promise<DeleteFieldsResponse>;
    /**
     * Returns data about a specific deal field.
     * @summary Get one deal field
     * @param {DealFieldsApiGetDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDealField(requestParameters: DealFieldsApiGetDealFieldRequest): Promise<GetFieldResponse>;
    /**
     * Returns data about all deal fields.
     * @summary Get all deal fields
     * @param {DealFieldsApiGetDealFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    getDealFields(requestParameters?: DealFieldsApiGetDealFieldsRequest): Promise<GetFieldsResponse>;
    /**
     * Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a deal field
     * @param {DealFieldsApiUpdateDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     */
    updateDealField(requestParameters: DealFieldsApiUpdateDealFieldRequest): Promise<GetFieldResponse>;
};
/**
 * Request parameters for addDealField operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiAddDealFieldRequest
 */
export interface DealFieldsApiAddDealFieldRequest {
    /**
     *
     * @type {CreateFieldRequest}
     * @memberof DealFieldsApiAddDealField
     */
    readonly CreateFieldRequest?: CreateFieldRequest;
}
/**
 * Request parameters for deleteDealField operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiDeleteDealFieldRequest
 */
export interface DealFieldsApiDeleteDealFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof DealFieldsApiDeleteDealField
     */
    readonly id: number;
}
/**
 * Request parameters for deleteDealFields operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiDeleteDealFieldsRequest
 */
export interface DealFieldsApiDeleteDealFieldsRequest {
    /**
     * The comma-separated field IDs to delete
     * @type {string}
     * @memberof DealFieldsApiDeleteDealFields
     */
    readonly ids: string;
}
/**
 * Request parameters for getDealField operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiGetDealFieldRequest
 */
export interface DealFieldsApiGetDealFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof DealFieldsApiGetDealField
     */
    readonly id: number;
}
/**
 * Request parameters for getDealFields operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiGetDealFieldsRequest
 */
export interface DealFieldsApiGetDealFieldsRequest {
    /**
     * Pagination start
     * @type {number}
     * @memberof DealFieldsApiGetDealFields
     */
    readonly start?: number;
    /**
     * Items shown per page
     * @type {number}
     * @memberof DealFieldsApiGetDealFields
     */
    readonly limit?: number;
}
/**
 * Request parameters for updateDealField operation in DealFieldsApi.
 * @export
 * @interface DealFieldsApiUpdateDealFieldRequest
 */
export interface DealFieldsApiUpdateDealFieldRequest {
    /**
     * The ID of the field
     * @type {number}
     * @memberof DealFieldsApiUpdateDealField
     */
    readonly id: number;
    /**
     *
     * @type {UpdateFieldRequest}
     * @memberof DealFieldsApiUpdateDealField
     */
    readonly UpdateFieldRequest?: UpdateFieldRequest;
}
/**
 * DealFieldsApi - object-oriented interface
 * @export
 * @class DealFieldsApi
 * @extends {BaseAPI}
 */
export declare class DealFieldsApi extends BaseAPI {
    /**
     * Adds a new deal field. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">adding a new custom field</a>.
     * @summary Add a new deal field
     * @param {DealFieldsApiAddDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    addDealField(requestParameters?: DealFieldsApiAddDealFieldRequest): Promise<GetFieldResponse>;
    /**
     * Marks a field as deleted. For more information, see the tutorial for <a href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\">deleting a custom field</a>.
     * @summary Delete a deal field
     * @param {DealFieldsApiDeleteDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    deleteDealField(requestParameters: DealFieldsApiDeleteDealFieldRequest): Promise<DeleteResponse>;
    /**
     * Marks multiple deal fields as deleted.
     * @summary Delete multiple deal fields in bulk
     * @param {DealFieldsApiDeleteDealFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    deleteDealFields(requestParameters: DealFieldsApiDeleteDealFieldsRequest): Promise<DeleteFieldsResponse>;
    /**
     * Returns data about a specific deal field.
     * @summary Get one deal field
     * @param {DealFieldsApiGetDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    getDealField(requestParameters: DealFieldsApiGetDealFieldRequest): Promise<GetFieldResponse>;
    /**
     * Returns data about all deal fields.
     * @summary Get all deal fields
     * @param {DealFieldsApiGetDealFieldsRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    getDealFields(requestParameters?: DealFieldsApiGetDealFieldsRequest): Promise<GetFieldsResponse>;
    /**
     * Updates a deal field. For more information, see the tutorial for <a href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values</a>.
     * @summary Update a deal field
     * @param {DealFieldsApiUpdateDealFieldRequest} requestParameters Request parameters.

     * @throws {RequiredError}
     * @memberof DealFieldsApi
     */
    updateDealField(requestParameters: DealFieldsApiUpdateDealFieldRequest): Promise<GetFieldResponse>;
}
